
/////////////////


// CG Vertex shader definition
vertex_program MultiTextureEdit_VS cg            
{
    // Look in this source file for shader code
    source MultiTextureEditor.cg
    
    // Use this function for the vertex shader            
    entry_point main_multi_texture_edit_vp    
    
    // Compile the shader to vs_1_1 format    
    profiles vs_2_0 arbvp1                 
 
    // This block saves us from manually setting parameters in code
    default_params                    
    {
        // Ogre will put the worldviewproj into our 'worldViewProj' parameter for us.
        param_named_auto worldviewproj worldviewproj_matrix        
        // Note that 'worldViewProj' is a parameter in the cg code.
        //param_named_auto texViewProj texture_viewproj_matrix
        param_named_auto world world_matrix
        param_named pointer float4// 0.0 0.0 0.0 // x,y - mouse pos, z=radius; TODO w=blur radius
    }
}

// CG Pixel shader definition
fragment_program MultiTextureEdit_PS cg            
{
    // Look in this source file for shader code
    source MultiTextureEditor.cg        
    
    // Use this function for the pixel shader    
    entry_point main_multi_texture_edit_fp    
    
    // Compile to ps_1_1 format    
    profiles ps_2_0 fp30 //arbfp1   
    
    default_params                    
    {      
    param_named_auto cameraPosition  camera_position         
    }
}

material MultiTextureEditor
{
        // Material has one technique
    technique                    
    {
        pass         //textures           
        {
                        // Make this pass use the vertex shader defined above
            vertex_program_ref MultiTextureEdit_VS    
            {
            }
                        // Make this pass use the pixel shader defined above
            fragment_program_ref MultiTextureEdit_PS    
            {
            }
            texture_unit
            {
                                // This pass will use this 2D texture as its input
//                texture smallTerrain.jpg 2d
                texture bigTerrain.png 2d
                tex_address_mode clamp
                filtering point linear point
            }
            texture_unit
            {
                content_type shadow
                tex_address_mode clamp
                filtering none
            }
        }
        
    }
    
}
